# ===========================================
# ПРОДАКШН ОКРУЖЕНИЕ (PRODUCTION ENVIRONMENT)
# ===========================================
# Используется для боевого развертывания
# Подключается к продакшн базе данных
# Использует продакшн токен Tinkoff API

spring.application.name=investment-data-loader-service

# ===========================================
# СЕРВЕР И ПОРТЫ
# ===========================================
server.port=8083

# ===========================================
# TINKOFF API - ПРОДАКШН ТОКЕН
# ===========================================
# Использует продакшн токен для реальных операций
tinkoff.api.token=${T_INVEST_PROD_TOKEN:}
tinkoff.api.base-url=https://invest-public-api.tinkoff.ru/rest
tinkoff.api.timeout=60000

# ===========================================
# БАЗА ДАННЫХ - ПРОДАКШН
# ===========================================
# Подключение к облачной PostgreSQL (45.132.176.136:5432)
spring.datasource.url=${SPRING_DATASOURCE_PROD_URL:jdbc:postgresql://45.132.176.136:5432/postgres}
spring.datasource.username=${SPRING_DATASOURCE_PROD_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PROD_PASSWORD:}
spring.datasource.driver-class-name=org.postgresql.Driver

# Пул соединений для продакшн окружения (оптимизирован для нагрузки)
spring.datasource.hikari.maximum-pool-size=50
spring.datasource.hikari.minimum-idle=10
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000
spring.datasource.hikari.leak-detection-threshold=60000

# ===========================================
# JPA / HIBERNATE - ПРОДАКШН НАСТРОЙКИ
# ===========================================
# Консервативные настройки для продакшна
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.default_schema=invest

# Оптимизация для продакшна
spring.jpa.properties.hibernate.jdbc.batch_size=100
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Отключаем подробное логирование для продакшна
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false

# Настройки транзакций для продакшна
spring.transaction.default-timeout=300
spring.jpa.properties.hibernate.connection.autocommit=false

# ===========================================
# ЛОГИРОВАНИЕ - МИНИМАЛЬНОЕ ДЛЯ ПРОДАКШНА
# ===========================================
logging.level.com.example.InvestmentDataLoaderService=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.security=WARN

# ===========================================
# DEVTOOLS - ОТКЛЮЧЕНЫ В ПРОДАКШНЕ
# ===========================================
spring.devtools.restart.enabled=false
spring.devtools.livereload.enabled=false

# ===========================================
# ПРИЛОЖЕНИЕ
# ===========================================
# Application timezone
app.timezone=Europe/Moscow

# ===========================================
# ПРОДАКШН НАСТРОЙКИ
# ===========================================
# Включаем кеширование для продакшна
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=1h

# Настройки безопасности
server.error.include-stacktrace=never
server.error.include-message=never

# Мониторинг и метрики
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# Настройки для продакшн данных
app.prod.mode=true
app.prod.data.backup.enabled=true
app.prod.data.backup.interval=24h
